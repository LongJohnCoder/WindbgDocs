<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"><HTML DIR="LTR" xmlns:MSHelp="http://msdn.microsoft.com/MSHelp">
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<TITLE>Client Objects</TITLE>
<META NAME="ms.locale" content="en-us">
<META NAME="DESCRIPTION" CONTENT="Debugger, Debugger, Design Guide, Client Objects"><xml><MSHelp:Keyword Index="A" Term="Engine_Overview_2838c538-1dc7-4494-b92d-49e58a4ad2aa.xml"/>
<META NAME="MS-HKWD" CONTENT="Debugger Engine, client objects">
<META NAME="MS-HKWD" CONTENT="client objects"></xml><LINK REL="stylesheet" type="text/css" href="backsdk4.css"><SCRIPT src="langref.js"></SCRIPT><style>dd {margin-bottom:0em; margin-left:1.9em; }</style>
<style>.divclass {behavior:url(#default#savehistory);}</style>
<META NAME="save" CONTENT="history">
</HEAD>
<Body topmargin="0">
<DIV STYLE="display:none;"></DIV>
<DIV STYLE="display:none;"></DIV>
<TABLE CLASS="buttonbarshade" CELLSPACING="0" border="0"><TR><TD NOWRAP="true"> </TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING="0">
<TR ID="hdr">
<TD NOWRAP="true" CLASS="runninghead">Debugging Tools for Windows</TD>
</TR>
</TABLE>
<H1><A NAME="Engine_Overview_2838c538-1dc7-4494-b92d-49e58a4ad2aa.xml"></A>Client Objects</H1>
<P>Almost all interaction with the <a href="dbg_glossary_e3f0f980-4b88-4e00-934b-0443c9640c06.xml.htm#cc3d62e3-661f-4077-bb5b-189750153eae">debugger engine</a> is through <i>client objects</i>, often simply referred to as <i>clients</i>.  Each client provides an implementation of the top-level engine interfaces.  Each interface provides a different set of methods, which can be used to interact with the engine and, through the engine, the <a href="dbg_glossary_4146d166-2a62-4d54-90b7-5cdadb272bf0.xml.htm#97fed5e2-80ad-4319-91e6-e2e000fbcbd6">targets</a>.  An instance of the engine can have many clients, each with its own state.</P>
<H4>Primary Clients</H4>
<P>A <i>primary client</i> is a client that has joined the current <a href="dbg_glossary_e3f0f980-4b88-4e00-934b-0443c9640c06.xml.htm#92258fee-c7c3-423c-af60-ab4583902c9b">debugging session</a>.  Initially, when a new client object is created, it is not a primary client.  A client becomes a primary client when it is used to acquire a target (for example, by calling <a href="idebugclient_1cf74a01-b7bd-4899-8a17-4fc443ee0fbc.xml.htm"><b>CreateProcess2</b></a>) or is connected to the debugging session using <a href="idebugclient_b6ec9f48-f400-4a91-bf23-dc40dd702a15.xml.htm"><b>ConnectSession</b></a>.  The debugger command <a href="r19_metacmds_a_e53f575c-5a40-48c6-af85-4aebc680ca91.xml.htm"><b>.clients</b></a> lists only the primary clients.</P>
<H4>Callback Objects</H4>
<P>Callback objects can be registered with each client.  There are three types of callback objects:</P><B></B><OL type="1">
<LI><b>Input Callback Objects</b> (or <i>input callbacks</i>): the engine calls input callbacks to request input.  For example, a debugger with a console window could register an input callback to provide the engine with input from the user, or a debugger might register an input callback to provide the engine with input from a file.</LI>
<LI><b>Output Callback Objects</b> (or <i>output callbacks</i>): the engine calls output callbacks to display output.  For example, a debugger with a console window could register an output callback to present the debugger's output to the user, or a debugger might register an output callback to send the output to a log file.</LI>
<LI><b>Event Callback Objects</b> (or <i>event callbacks</i>): the engine calls event callbacks whenever an event occurs in a target (or there is a change in the engine's state).  For example, a debugger extension library could register an event callback to monitor certain events or perform automated actions when an particular event occurs.</LI>
</OL>
<H4>Remote Debugging</H4>
<P>Client objects facilitate communication to remote instances of the host engine.  The <a href="clientfns_7beeb350-b8bd-44ea-b5c9-ca0da15146ae.xml.htm"><b>DebugConnect</b></a> function creates a client object that is connected to a remote engine instance; methods called on this client are executed by the remote engine and callback objects registered locally with the client will be called when the remote engine makes callback calls.</P>
<H4>Additional Information</H4>
<P>For details about creating and using client objects, see <a href="engine_dg_f76855d1-672f-4a0e-b4da-a2b4c2ac4e5d.xml.htm">Using Callback Objects</a>.  For details about registering callback objects, see <a href="engine_dg_f76855d1-672f-4a0e-b4da-a2b4c2ac4e5d.xml.htm">Using Callback Objects</a>.</P>
<DIV style="display:yes"></DIV>
<DIV CLASS="footer"><br><A href="dbglegal.htm">© 2009 Microsoft Corporation</A><br><A href="mailto:windbgfb@microsoft.com?subject=documentation feedback [Debugger]: Client Objects RELEASE: (December 09, 2009)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AThe WDK team uses the feedback submitted to improve the WDK documentation. We do not use your e-mail address for any other purpose. We will remove your e-mail address from our system after the issue you are reporting has been resolved. While we are working to resolve this issue, we may send you an e-mail message to request more information about your feedback. After the issues have been addressed, we may send you an e-mail message to let you know that your feedback has been addressed.%0A%0AFor more information about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx.
              ">Send feedback on this topic</A><br>Debugging Tools for Windows<br>December 09, 2009<br></DIV>
</Body>
</HTML>
