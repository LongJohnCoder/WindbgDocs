<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"><HTML DIR="LTR" xmlns:MSHelp="http://msdn.microsoft.com/MSHelp">
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<TITLE>Risks Entailed When Setting Breakpoints</TITLE>
<META NAME="ms.locale" content="en-us">
<META NAME="DESCRIPTION" CONTENT="Debugger, Debugger, Design Guide, Risks Entailed When Setting Breakpoints"><xml><MSHelp:Keyword Index="A" Term="r07_use_operation_f4ae2ad0-e56d-46fb-b14b-15235010513b.xml"/>
<META NAME="MS-HKWD" CONTENT="breakpoints, risks"></xml><LINK REL="stylesheet" type="text/css" href="backsdk4.css"><SCRIPT src="langref.js"></SCRIPT><style>dd {margin-bottom:0em; margin-left:1.9em; }</style>
<style>.divclass {behavior:url(#default#savehistory);}</style>
<META NAME="save" CONTENT="history">
</HEAD>
<Body topmargin="0">
<DIV STYLE="display:none;"></DIV>
<DIV STYLE="display:none;"></DIV>
<TABLE CLASS="buttonbarshade" CELLSPACING="0" border="0"><TR><TD NOWRAP="true"> </TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING="0">
<TR ID="hdr">
<TD NOWRAP="true" CLASS="runninghead">Debugging Tools for Windows</TD>
</TR>
</TABLE>
<H1><A NAME="r07_use_operation_f4ae2ad0-e56d-46fb-b14b-15235010513b.xml"></A>Risks Entailed When Setting Breakpoints</H1>
<P>When you are setting a <a href="r07_use_operation_b31049a1-efde-4f99-b82d-f47c3c7daf64.xml.htm">breakpoints</a> by specifying a memory address or a symbol plus an offset, you must not put this breakpoint in the middle of an instruction.</P>
<P>For example, consider the following disassembled code.</P>
<P style="cursor:text; padding:2pt,4pt;font: 100% Courier New, Courier, mono; color: #660000;"><nobr>770000f1 5e               pop     esi<BR>770000f2 5b               pop     ebx<BR>770000f3 c9               leave<BR>770000f4 c21000           ret     0x10<BR>770000f7 837ddc00         cmp     dword ptr [ebp-0x24],0x0<BR></nobr></P>
<P></P>
<P>The first three instructions are only one byte long. However, the fourth instruction is three bytes long. (It includes bytes 0x770000F4, 0x770000F5, and 0x770000F6.) If you want to put a breakpoint on this instruction by using the <b>bp</b>, <b>bu</b>, or <b>ba</b> command, you must specify the 0x770000F4 address.</P>
<P>If you put a breakpoint in the 0x770000F5 address by using the <b>ba</b> command, the processor puts a breakpoint at that location. But this breakpoint would never be triggered, because the processor considers 0x770000F4 to be the actual address of the instruction.</P>
<P>If you put a breakpoint in the 0x770000F5 address by using the <b>bp</b> or <b>bu</b> commands, the debugger writes a breakpoint at that location. However, this breakpoint might corrupt the target because of how the debugger creates breakpoints:</P><B></B><OL type="1">
<LI>The debugger saves the contents of 0x770000F5 and overwrites this memory with a breakpoint instruction.</LI>
<LI>If you try to display this memory in the debugger, the debugger does not show the breakpoint instruction that it has written. Instead, the debugger shows the memory that "should" be there. That is, the debugger shows the original memory, or any modifications to that memory that you have made since inserting the breakpoint.</LI>
<LI>If you use the <b>BC</b> command to remove the breakpoint, the debugger restores the original memory to its proper location.</LI>
</OL>
<P></P>
<P>When you put a breakpoint at  0x770000F5, the debugger saves this byte and a break instruction is written here. However, when the application runs, it reaches the 0x770000F4 address and recognizes this address as the first byte of a multibyte instruction. The processor then tries to combine 0x770000F4, 0x770000F5, and possibly some later bytes into a single instruction. This combination can create a variety of behaviors, none of which are desirable.</P>
<P>Therefore, when you put breakpoints by using a <b>bp</b>, <b>bu</b>, or <b>ba</b> command, make sure that you always put the breakpoints at the proper address. If you are using the WinDbg graphical interface to add breakpoints, you do not have to be concerned about this situation because the correct address is chosen automatically.</P>
<P></P>
<DIV style="display:yes"></DIV>
<DIV CLASS="footer"><br><A href="dbglegal.htm">© 2009 Microsoft Corporation</A><br><A href="mailto:windbgfb@microsoft.com?subject=documentation feedback [Debugger]: Risks Entailed When Setting Breakpoints RELEASE: (December 09, 2009)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AThe WDK team uses the feedback submitted to improve the WDK documentation. We do not use your e-mail address for any other purpose. We will remove your e-mail address from our system after the issue you are reporting has been resolved. While we are working to resolve this issue, we may send you an e-mail message to request more information about your feedback. After the issues have been addressed, we may send you an e-mail message to let you know that your feedback has been addressed.%0A%0AFor more information about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx.
              ">Send feedback on this topic</A><br>Debugging Tools for Windows<br>December 09, 2009<br></DIV>
</Body>
</HTML>
