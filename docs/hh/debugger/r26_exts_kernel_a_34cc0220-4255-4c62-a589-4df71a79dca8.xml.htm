<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"><HTML DIR="LTR" xmlns:MSHelp="http://msdn.microsoft.com/MSHelp">
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<TITLE>!dma</TITLE>
<META NAME="ms.locale" content="en-us">
<META NAME="DESCRIPTION" CONTENT="Debugger, Debugger, Design Guide, !dma"><xml><MSHelp:Keyword Index="A" Term="r26_exts_kernel_A_34cc0220-4255-4c62-a589-4df71a79dca8.xml"/>
<META NAME="MS-HKWD" CONTENT="!dma extension">
<META NAME="MS-HKWD" CONTENT="DMA Verification (Driver Verifier)">
<META NAME="MS-HKWD" CONTENT="Driver Verifier, !dma extension"></xml><LINK REL="stylesheet" type="text/css" href="backsdk4.css"><SCRIPT src="langref.js"></SCRIPT><style>dd {margin-bottom:0em; margin-left:1.9em; }</style>
<style>.divclass {behavior:url(#default#savehistory);}</style>
<META NAME="save" CONTENT="history">
</HEAD>
<Body topmargin="0">
<DIV STYLE="display:none;"></DIV>
<DIV STYLE="display:none;"></DIV>
<TABLE CLASS="buttonbarshade" CELLSPACING="0" border="0"><TR><TD NOWRAP="true"> </TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING="0">
<TR ID="hdr">
<TD NOWRAP="true" CLASS="runninghead">Debugging Tools for Windows</TD>
</TR>
</TABLE>
<H1><A NAME="r26_exts_kernel_A_34cc0220-4255-4c62-a589-4df71a79dca8.xml"></A>!dma</H1>
<P><P>The <b>!dma</b> extension displays information about the Direct Memory Access (DMA) subsystem, and the <b>DMA Verifier</b> option of Driver Verifier.</P>
</P>
<H4>Syntax</H4>
<P style="background:#dddddd;cursor:text;padding:2pt,4pt;font: 100% Courier New, Courier, mono;"><nobr><b>!dma</b> <BR><b>!dma</b> <i>Adapter</i> [<i>Flags</i>] <BR></nobr></P>
<P></P>
<DL><H4>Parameters</H4>
<DT><i>Adapter</i></DT>
<DD>Specifies the hexadecimal address of the DMA adapter to be displayed. If this is zero, all DMA adapters will be displayed.</DD>
<DT><i>Flags</i></DT>
<DD>Specifies the information to include in the display. This can be any combination of the following bits. The default is 0x1.<DL><DT>Bit 0 (0x1)</DT>
<DD>Causes the display to include generic adapter information.</DD>
<DT>Bit 1 (0x2)</DT>
<DD>Causes the display to include map register information. <i>(Only when DMA Verification is active.)</i> </DD>
<DT>Bit 2 (0x4)</DT>
<DD>Causes the display to include common buffer information. <i>(Only when DMA Verification is active.)</i> </DD>
<DT>Bit 3 (0x8)</DT>
<DD>Causes the display to include scatter/gather list information. <i>(Only when DMA Verification is active.)</i> </DD>
<DT>Bit 4 (0x10)</DT>
<DD>Causes the display to include the device description for the hardware device. <i>(Only when DMA Verification is active.)</i> </DD>
<DT>Bit 5 (0x20)</DT>
<DD>Causes the display to include Wait context block information.</DD>
</DL>
<P></P>
</DD>
</DL>
<P></P>
<H4>DLL</H4><B></B><table>
<TR valign="top">
<TD Width=""><b>Windows 2000</b></TD>
<TD Width="">Unavailable </TD>
</TR>
<TR valign="top">
<TD Width=""><b>Windows XP and later</b></TD>
<TD Width=""><i>Kdexts.dll</i> </TD>
</TR>
</table>
<P></P>
<P></P>
<H4>Comments</H4>
<P>Invalid arguments (for example, <b>!dma 1</b>) generate a brief help text.   </P>
<P>When the <b>!dma</b> extension is used with no parameters, it displays a concise list of all DMA adapters and their addresses. This can be used to obtain the address of an adapter for use in the longer versions of this command.</P>
<P>Here is an example of how this extension can be used when the Driver Verifier's <b>DMA Verification</b> option is active:</P>
<P style="cursor:text; padding:2pt,4pt;font: 100% Courier New, Courier, mono; color: #660000;"><nobr>0:kd&gt; <b>!dma</b><BR><BR>Dumping all DMA adapters...<BR><BR>Adapter: 82faebd0     Owner: SCSIPORT!ScsiPortGetUncachedExtension <BR>Adapter: 82f88930     Owner: SCSIPORT!ScsiPortGetUncachedExtension <BR>Adapter: 82f06cd0     Owner: NDIS!NdisMAllocateMapRegisters <BR>Master adapter: 80076800<BR><BR></nobr></P>
<P>From this output, you can see that there are three DMA adapters in the system. SCSIPORT owns two and NDIS owns the third. To examine the NDIS adapter in detail, use the <b>!dma</b> extension with its address:</P>
<P style="cursor:text; padding:2pt,4pt;font: 100% Courier New, Courier, mono; color: #660000;"><nobr>0:kd&gt; <b>!dma  82f06cd0</b><BR>Adapter: 82f06cd0     Owner: NDIS!NdisMAllocateMapRegisters (0x9fe24351)<BR>   MasterAdapter:       00000000<BR>   Adapter base Va      00000000<BR>   Map register base:   00000000<BR>   WCB:                 82f2b604<BR>   Map registers: 00000000 mapped, 00000000 allocated, 00000002 max<BR><BR>   Dma verifier additional information:<BR>   DeviceObject: 82f98690<BR>   Map registers:        00000840 allocated, 00000000 freed<BR>   Scatter-gather lists: 00000000 allocated, 00000000 freed<BR>   Common buffers:       00000004 allocated, 00000000 freed<BR>   Adapter channels:     00000420 allocated, 00000420 freed<BR>   Bytes mapped since last flush: 000000f2<BR><BR></nobr></P>
<P>The first block of data is specific information that a HAL developer can use to debug the problem. For your purposes, the data below "Dma verifier additional information" is what is interesting. In this example, you see that NDIS has allocated 0x840 map registers. This is a huge number, especially because NDIS had indicated that it planned to use a maximum of two map registers. This adapter apparently does not use scatter/gather lists and has put away all its adapter channels. Look at the map registers in more detail:</P>
<P style="cursor:text; padding:2pt,4pt;font: 100% Courier New, Courier, mono; color: #660000;"><nobr>0:kd&gt; <b>!dma  82f06cd0 2</b><BR>Adapter: 82f06cd0     Owner: NDIS!NdisMAllocateMapRegisters <BR>...<BR><BR>  Map register file 82f06c58 (0/2 mapped)<BR>     Double buffer mdl: 82f2c188<BR>     Map registers:<BR>        82f06c80: Not mapped<BR>        82f06c8c: Not mapped<BR><BR>  Map register file 82f06228 (1/2 mapped)<BR>     Double buffer mdl: 82f1b678<BR>     Map registers:<BR>        82f06250: 00bc bytes mapped to f83c003c<BR>        82f0625c: Not mapped<BR><BR>  Map register file 82fa5ad8 (1/2 mapped)<BR>     Double buffer mdl: 82f1b048<BR>     Map registers:<BR>        82fa5b00: 0036 bytes mapped to 82d17102<BR>        82fa5b0c: Not mapped<BR>...<BR><BR></nobr></P>
<P>In this example, you see that certain map registers have been mapped. Each <i>map register file</i> is an allocation of map registers by the driver. In other words, it represents a single call to <b>AllocateAdapterChannel</b>. NDIS collects a large number of these map register files, while some drivers create them one at a time and dispose of them when they are finished.</P>
<P>The map register files are also the addresses that are returned to the device under the name "MapRegisterBase". Note that DMA verifier only hooks the first 64 map registers for each driver. The rest are ignored for reasons of space (each map register represents three physical pages).</P>
<P>In this example, two map register files are in use. This means that the driver has mapped a buffer so it is visible to the hardware. In the first case, 0xBC bytes are mapped to the system virtual address 0xF83C003C.</P>
<P>An examination of the common buffers reveals:</P>
<P style="cursor:text; padding:2pt,4pt;font: 100% Courier New, Courier, mono; color: #660000;"><nobr>0:kd&gt; <b>!dma  82f06cd0 4</b><BR>Adapter: 82f06cd0     Owner: NDIS!NdisMAllocateMapRegisters <BR>...<BR>   Common buffer allocated by NDIS!NdisMAllocateSharedMemory:<BR>      Length:           1000<BR>      Virtual address:  82e77000<BR>      Physical address: 2a77000<BR><BR>   Common buffer allocated by NDIS!NdisMAllocateSharedMemory:<BR>      Length:           12010<BR>      Virtual address:  82e817f8<BR>      Physical address: 2a817f8<BR><BR>   Common buffer allocated by NDIS!NdisMAllocateSharedMemory:<BR>      Length:           4300<BR>      Virtual address:  82e95680<BR>      Physical address: 2a95680<BR><BR>   Common buffer allocated by NDIS!NdisMAllocateSharedMemory:<BR>      Length:           4800<BR>      Virtual address:  82e9d400<BR>      Physical address: 2a9d400<BR><BR></nobr></P>
<P>This is fairly straightforward; there are four common buffers of varying lengths. The physical and virtual addresses are all given.</P>
<H4>Additional Information</H4>
<P>For information about Driver Verifier, see the Windows Driver Kit (WDK) documentation. For information about DMA, see the Windows Driver Kit (WDK) documentation and <i>Microsoft Windows Internals</i> by Mark Russinovich David Solomon.</P>
<P></P>
<DIV style="display:yes"></DIV>
<DIV CLASS="footer"><br><A href="dbglegal.htm">© 2009 Microsoft Corporation</A><br><A href="mailto:windbgfb@microsoft.com?subject=documentation feedback [Debugger]: !dma RELEASE: (December 09, 2009)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AThe WDK team uses the feedback submitted to improve the WDK documentation. We do not use your e-mail address for any other purpose. We will remove your e-mail address from our system after the issue you are reporting has been resolved. While we are working to resolve this issue, we may send you an e-mail message to request more information about your feedback. After the issues have been addressed, we may send you an e-mail message to let you know that your feedback has been addressed.%0A%0AFor more information about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx.
              ">Send feedback on this topic</A><br>Debugging Tools for Windows<br>December 09, 2009<br></DIV>
</Body>
</HTML>
