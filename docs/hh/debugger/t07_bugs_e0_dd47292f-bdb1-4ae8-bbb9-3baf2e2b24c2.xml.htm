<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"><HTML DIR="LTR" xmlns:MSHelp="http://msdn.microsoft.com/MSHelp">
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<TITLE>Bug Check 0xEA: THREAD_STUCK_IN_DEVICE_DRIVER</TITLE>
<META NAME="ms.locale" content="en-us">
<META NAME="DESCRIPTION" CONTENT="Debugger, Debugger, Design Guide, Bug Check 0xEA: THREAD_STUCK_IN_DEVICE_DRIVER"><xml><MSHelp:Keyword Index="A" Term="t07_bugs_E0_dd47292f-bdb1-4ae8-bbb9-3baf2e2b24c2.xml"/>
<META NAME="MS-HKWD" CONTENT="Bug Check 0xEA: THREAD_STUCK_IN_DEVICE_DRIVER">
<META NAME="MS-HKWD" CONTENT="THREAD_STUCK_IN_DEVICE_DRIVER"></xml><LINK REL="stylesheet" type="text/css" href="backsdk4.css"><SCRIPT src="langref.js"></SCRIPT><style>dd {margin-bottom:0em; margin-left:1.9em; }</style>
<style>.divclass {behavior:url(#default#savehistory);}</style>
<META NAME="save" CONTENT="history">
</HEAD>
<Body topmargin="0">
<DIV STYLE="display:none;"></DIV>
<DIV STYLE="display:none;"></DIV>
<TABLE CLASS="buttonbarshade" CELLSPACING="0" border="0"><TR><TD NOWRAP="true"> </TD></TR></TABLE>
<TABLE CLASS="buttonbartable" CELLSPACING="0">
<TR ID="hdr">
<TD NOWRAP="true" CLASS="runninghead">Debugging Tools for Windows</TD>
</TR>
</TABLE>
<H1><A NAME="t07_bugs_E0_dd47292f-bdb1-4ae8-bbb9-3baf2e2b24c2.xml"></A>Bug Check 0xEA: THREAD_STUCK_IN_DEVICE_DRIVER</H1>
<P>The THREAD_STUCK_IN_DEVICE_DRIVER bug check has a value of 0x000000EA. This indicates that a thread in a device driver is endlessly spinning.</P>
<H4>Parameters</H4>
<P>The following parameters are displayed on the blue screen.</P><B></B><table>
<TR valign="top">
<TH Width="">Parameter</TH>
<TH Width="">Description</TH>
</TR>
<TR valign="top">
<TD Width="">1</TD>
<TD Width="">A pointer to the stuck thread object </TD>
</TR>
<TR valign="top">
<TD Width="">2</TD>
<TD Width="">A pointer to the DEFERRED_WATCHDOG object</TD>
</TR>
<TR valign="top">
<TD Width="">3</TD>
<TD Width="">A pointer to the offending driver name </TD>
</TR>
<TR valign="top">
<TD Width="">4</TD>
<TD Width=""><i>In the kernel debugger:</i> The number of times the "intercepted" bug check 0xEA was hit<BR><BR><i>On the blue screen:</i> 1  <BR><BR></TD>
</TR>
</table>
<P></P>
<H4>Cause</H4>
<P>A device driver is spinning in an infinite loop, most likely waiting for hardware to become idle.</P>
<P>This usually indicates problem with the hardware itself, or with the device driver programming the hardware incorrectly. Frequently, this is the result of a bad video card or a bad display driver.</P>
<H4>Resolving the Problem</H4>
<P>Use the <a href="r22_metacmds_s_5263404d-63fa-4eda-a34a-c986e174e8e7.xml.htm"><b>.thread (Set Register Context)</b></a> command together with Parameter 1. Then use <a href="r17_cmds_i_58e69e42-fcda-4972-9358-60ab7a6e1def.xml.htm"><b>kb (Display Stack Backtrace)</b></a> to find the location where the thread is stuck.</P>
<P>If the kernel debugger is already connected and running when Windows detects a time-out condition. Then <b>DbgBreakPoint</b> will be called instead of <b>KeBugCheckEx</b>. A detailed message will be printed to the debugger.  See <a href="t02_debugfns_b8f888cc-bbbb-4f27-aeed-ac63da0ddcd9.xml.htm">Sending Output to the Debugge</a>for more information.      </P>
<P>This message will include what would have been the bug check parameters. Because no actual bug check was issued, the <a href="r19_metacmds_a_88506020-c902-4aa5-8b38-9aaeab637277.xml.htm"><b>.bugcheck (Display Bug Check Data)</b></a> command will not be useful. The four parameters can also be retrieved from Watchdog's global variables by using <b>dd watchdog!g_WdBugCheckData L5</b>" on a 32-bit system, or <b>dq watchdog!g_WdBugCheckData L5</b>" on a 64-bit system.</P>
<P>Debugging this error in an interactive manner such as this will enable you to find an offending thread, set breakpoints in it, and then use <a href="r16_cmds_c_5caa8c36-48bf-4892-aaea-ea0e70481ab4.xml.htm"><b>g (Go)</b></a> to return to the spinning code to debug it further. </P>
<P>On multiprocessor machines (OS build 3790 or earlier), you can hit a time out if the spinning thread is interrupted by a hardware interrupt and an ISR or DPC routine is running at the time of the bug check. This is because the time out's work item can be delivered and handled on the second CPU and the same time. If this occurs, you must look deeper at the offending thread's stack to determine the spinning code which caused the time out to occur. Use the <a href="r16_cmds_c_4865ae85-0c91-47f6-ad21-fa4c1db674be.xml.htm"><b>dds (Display Words and Symbols)</b></a> command to do this.</P>
<P></P>
<DIV style="display:yes"></DIV>
<DIV CLASS="footer"><br><A href="dbglegal.htm">© 2009 Microsoft Corporation</A><br><A href="mailto:windbgfb@microsoft.com?subject=documentation feedback [Debugger]: Bug Check 0xEA: THREAD_STUCK_IN_DEVICE_DRIVER RELEASE: (December 09, 2009)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AThe WDK team uses the feedback submitted to improve the WDK documentation. We do not use your e-mail address for any other purpose. We will remove your e-mail address from our system after the issue you are reporting has been resolved. While we are working to resolve this issue, we may send you an e-mail message to request more information about your feedback. After the issues have been addressed, we may send you an e-mail message to let you know that your feedback has been addressed.%0A%0AFor more information about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx.
              ">Send feedback on this topic</A><br>Debugging Tools for Windows<br>December 09, 2009<br></DIV>
</Body>
</HTML>
